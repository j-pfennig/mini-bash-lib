──────────────────────────────────────────────────────────────────────────────────────────────
Topic - mini bash lib - A very minimal sub-set of centauri-bash-library
──────────────────────────────────────────────────────────────────────────────────────────────
Purpose:   The mini-bash-lib has practical and educational use. Please always remember:

Remark:    • it implements only something around 1% of _centauri_bash_lib
           • it can be used simplify scripting and to support debugging
           • it demonstrates some of the main design goals of _centauri_bash_lib:
                  application framework: here only some option parsing, run() and usage()
                  debug support: options -t|--trace and -d|--dryrun, trace()
           • error handling: error(), fatal(), quit(), system() to run commands
           • simplify programming: folder(), splitjoin(), symlink(), confirm()
           • reasonable console output: message(), warning(), trace()

Content:   The following functions and options are implemented:

           confirm     [-a|-i] [-n|-y] [-p <what>] [--] <text>...
           copy        [-f|-q] [-r] [-a] [-u] [--] <arg>...
           create      [-r] [-t] [-c] [-v <vnam>] [--] <path>|-
           dryrun      [-r]
           embed       [-a|-s <vnam>] [-r] [--] <tool> <arg>...
           error       -i] [-m|-p] [-q|-t] [--] <text>...
           fatal       [-m|-p] [--] <text>...
           folder      [-c] [-m] [-p] [-f|-q] [--] <path>
           main        [<opt>...] [---] [<arg>...]
           message     [-a|-i] [-m|-p] [--] <text>...                # also: -e|-f|-w -q|-t
           optarg      <name> <vnam>|- [-t|-f] [<valu>]
           rename      [-f|-q] [-r] [--] <arg>...
           remove      [-f|-q] [-r] [-d] [-o] [--] <arg>...
           splitjoin   [-j|-s <vnam>] [-d <deli>]
           symlink     [-f|-q] [-r] [-n] [-r] [--] <arg>...
           system      [-a|-s <vnam>] [-c] [-e|-f|-q|-t|-w] [-p] [-r] [-z] [--] <tool> <arg>...
           tmpfile     [-n] [-r] [-s <vnam>]
           trace       [-a|-i] [-m|-p] [--] <text>...
           warning     [-a|-i] [-m|-p] [--] <text>...
           quit        [-a|-i] [-e|-t|-u] [-m|-p] [-s <code>] [--] <text>...

General:   The order of options is not relevant, '--' terminates the option list (if not used
           and the next argument starts with a '-' that argument is parsed as an option).

──────────────────────────────────────────────────────────────────────────────────────────────
Topic - coexistence - Using mini-bash-lib script with centauri-bash-library installed
──────────────────────────────────────────────────────────────────────────────────────────────
           Option: --mini      never load _centauri-bash-lib

           template + Generating mini-bash-lib scripts with centauricreate

           run + The run function

           usage + Providing help

──────────────────────────────────────────────────────────────────────────────────────────────
Function - confirm - prompt for console input
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      [-a|-i] [-n|-y|-p <what>] [-d <dflt>] [-s <vnam>] [-u] [--] <text>...

Options:   -a  indent automatically
           -d  default reply, also used with '-p .'
           -i  always indent
           -n  yes/No prompt, short for: -p ' [y/N]? ' -d 'no'
           -p  appended to prompt text, see below for "-"|"+"|"."
           -s  save reply to <vnam> variable
           -u  allow upper case characters in reply
           -y  Yes/no prompt, short for: -p ' [n/Y]? ' -d 'yes'

Arguments: <dflt>          final part of prompt. Example: " [OK]? "
           <text>          prompt message
           <what>  -       ask for free text input
                   +       ask for a password (no echo)
                   .       append ' [<dflt>]: ' to prompt text
                   <text>  append ' <dflt> ' to prompt text

Return:    true for "yes" answer or non-empty result otherwise
           false for "no" answer or empty result

Remarks:   The options --yes/--no passed to main cause prompts to be suppressed and to return
           the following result:

           --no    confirm always returns false
           --yes   accept the default answer (as if <return> were hit)

Examples:  confirm -p '.' -d 'good' 'How do you feel today'

──────────────────────────────────────────────────────────────────────────────────────────────
Function - copy - conveniency wrapper for coreutils 'cp'
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      copy [-f|-q] [-r] [-a] [-u] [--] <arg>...

Options:   -a  run 'cp -a' (archive)
           -f  make errors fatal
           -q  do not report errors
           -r  ignore --dryrun
           -u  run 'cp -u' (update)

           options not listed above are ignored

Arguments: <arg>   all arguments are literally passed to 'cp'

Return:    The status of 'cp' or false with --dryrun

Remarks:   This function executes something like "system -e -p -- cp <arg>" to simplify error
           handling.

──────────────────────────────────────────────────────────────────────────────────────────────
Function - dryrun - test for option --dryrun, generate trace message
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      dryrun [-r] [--] <text>...

Options:   -r  ignore --dryrun (return false)

           options not listed above are ignored

Arguments: <text>  text for --dryrun trace() message

Return:    true for --dryrun, false otherwise

Examples:  ┃ dryrun "skip some steps" && return

           ┃ if ! dryrun "Create file list:" "$PWD" ; then
           ┃     ls -1 > "$tmpfile"
           ┃ fi

──────────────────────────────────────────────────────────────────────────────────────────────
Function - embed - run another script like a sub-routine
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      embed [-a|-s <vnam>] [-r] [--] <tool> <arg>...

Options:   -a  return output as array of lines in <vnam>
           -r  ignore --dryrun
           -s  return output as a single line in <vnam>

Arguments: <tool>  a mini-bash-lib or centauri-bash-lib script to be run
           <arg>   options or arguments passed to the script

Remark:    The current script name is passed to <tool> as --embed=$CEN_NAME.

Return:    The return code of <tool> unless 3 (abort). In the later case embed() does call
           "quit -s 3".

──────────────────────────────────────────────────────────────────────────────────────────────
Function - error - output an error message
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      error [-a|-i] [-m|-p] [-q|-t] [--] <text>...

Options:   -a  auto-indent (e.g. do not print the script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)
           -q  call quit -q if a previous error has occurred
           -t  silent test, return false for previous error

Arguments: <text>  Any text to be output

Return:    true on success (only -q|-t)  -or-  false otherwise

Examples:  ┃ system    cmd1
           ┃ system -t cmd2
           ┃ error -q "A previous command has failed"

           ┃ while error -t ; do
           ┃     do_something
           ┃ done

──────────────────────────────────────────────────────────────────────────────────────────────
Function - fatal - output a fatal error message and run quit
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      fatal [-m|-p] [--] <text>...

Options:   -a  auto-indent (e.g. do not repeat to script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)

Arguments: <text>  Any text to be output

Return:    This function never returns

──────────────────────────────────────────────────────────────────────────────────────────────
Function - folder - change working folder or create a new folder
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      folder [-c] [-m] [-p] [-f|-q] [--] <path>

Options:   -c  change current folder (default is to check existence)
           -f  make errors fatal
           -m  create folder as needed
           -p  change to physical path
           -q  do not report errors

Arguments: <path>  folder path

Return:    true on success  -or-  false otherwise

──────────────────────────────────────────────────────────────────────────────────────────────
Function - main - run the payload part of a script
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      main [<opt>...] [---] [<arg>...]

Options:   -<char>             short option
           -<char><value>      short option with value (no separating space)
           -<char> <value>     short option followed by value argument
           --<name>            long option
           --<name>=<value>    long option with value (using "=" separator)
           --<name> <value>    short option followed by value argument

Arguments: everything goes

Return:    not used, see quit()

──────────────────────────────────────────────────────────────────────────────────────────────
Function - message - Output text to stderr
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      message [-a|-i] [-m|-p] [--] <text>...

Options:   -a  auto-indent (e.g. do not repeat to script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)

Arguments: <text>  Any text to be output

Return:    true on success

──────────────────────────────────────────────────────────────────────────────────────────────
Function - optarg - Option setter for use in options() call-back
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      (1) optarg <name> <vnam>|- -f
           (2) optarg <name> <vnam>|- -t [<valu>]

Options:   -f      flag option, set <vnam> to "1"
           -t      text option, set <vnam> to option argument or <valu>

Arguments: <name>  option long name
           <vnam>  name of a variable to be set. If "-" the name is generated
                   from name like: CEN_OPT_<name>
           <valu>  default used when the option argument is "-"

Return:    true on success

──────────────────────────────────────────────────────────────────────────────────────────────
Function - rename - conveniency wrapper for coreutils 'mv'
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      rename [-f|-q] [-r] [--] <arg>...

Options:   -f  make errors fatal
           -q  do not report errors
           -r  ignore --dryrun

Arguments: <arg>   passed to "mv" tool

Return:    true on success  -or-  false otherwise

Remarks:   This function executes something like "system -e -p -- mv <arg>" to simplify error
           handling. Unlike in centauri-bash-lib no bash builtin is used.

──────────────────────────────────────────────────────────────────────────────────────────────
Function - remove - conveniency wrapper for coreutils 'rm'
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      remove [-f|-q] [-r] [-d] [-o] [--] <arg>...

Options:   -f  make errors fatal
           -d  remove folders recursively
           -o  pass "--one-filesystem" to "rm"
           -q  do not report errors
           -r  ignore --dryrun

Arguments: <arg>   passed to "rm" tool

Return:    true on success  -or-  false otherwise

Remarks:   This function executes something like "system -e -p -- rm -f <arg>" to simplify
           error handling. Unlike in centauri-bash-lib no bash builtin is used.

──────────────────────────────────────────────────────────────────────────────────────────────
Function - symlink - conveniency wrapper for corutils 'ln -s'
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      symlink [-f|-q] [-l] [-n] [-r] [--] <arg>...

Options:   -f  make errors fatal
           -l  make a relative symlink
           -n  no error checks, use "ln -s -f"
           -q  do not report errors
           -r  ignore --dryrun

Arguments: <arg>   passed to "ln" tool

Return:    true on success  -or-  false otherwise

Remarks:   This function executes something like "system -e -p -- ln -s <arg>" to simplify
           error handling. Unlike in centauri-bash-lib no bash builtin is used.

──────────────────────────────────────────────────────────────────────────────────────────────
Function - system - Run an external (or builtin) command
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      system [-a|-s <vnam>] [-e|-f|-q|-w] [-p] [-r] [-z] [--] <tool> <arg>...
           system -c [-e|-f|-q|-w] [--] <tool>...

Options:   -a  capture output to array
           -c  check if arguments are executable commands
           -e  output an error message on error
           -f  make errors fatal
           -p  pretty print error/warning output
           -q  redirect stdout and stderr to "/dev/null"
           -r  ignore --dryrun
           -s  capture output to string
           -w  output a warning on error
           -z  capture stderr only. do not interfere with stdout

Arguments: <tool>  external or builtin command to use
           <arg>   arguemnts for <tool>
           <vnam>  name of a string or array variable

Notes:     mini-bash-lib not explicitly support bash loadables. So system makes
           no difference beween builtin are external commands.

           system cannot by used recursively, so better don't call functions.

           While centauri-bash-lib uses "$(...)" to run a command mini-bash-lib
           redirects to a temporary file (like sysrun() does. This avoids a
           sub-shell but prevents recursive use.

Return:    true on success  -or-  false otherwise

──────────────────────────────────────────────────────────────────────────────────────────────
Function - tmpfile - create a temporary file that get deleted by quit
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      tmpfile [-n] [-r] [-s <vnam>]

Options:   -n  do not actually create a file, return path only
           -r  ignore --dryrun
           -s  save path to given variable, default is CEN_TEMPFILE

Arguments: <vnam>  name of a variable to receive the path

Return:    true on success  -or-  false otherwise

Remarks:   At program exit the quit() function recursively deletes all temporary
           objects that have a path obtained from tmpfile().

──────────────────────────────────────────────────────────────────────────────────────────────
Function - trace - Write a trace message to stderr output
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      trace [-a|-i] [-m|-p] [--] <text>...

Options:   -a  auto-indent (e.g. do not print the script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)

Arguments: <text>  Any text to be output

Return:    true on success

──────────────────────────────────────────────────────────────────────────────────────────────
Function - warning - Write a warning message to stderr output
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      warning [-a|-i] [-m|-p] [--] <text>...

Options:   -a  auto-indent (e.g. do not print the script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)

Arguments: <text>  Any text to be output

Return:    true on success

──────────────────────────────────────────────────────────────────────────────────────────────
Function - quit - terminate application, remove temporary file
──────────────────────────────────────────────────────────────────────────────────────────────
Call:      quit [-a|-i] [-e] [-m|-p] [-s <code>] [-t] [--] <text>...

Options:   -a  auto-indent (e.g. do not print the script name)
           -i  always indent
           -m  multi-line output (one line per <text> argument)
           -p  printf formatting (1st <text> arg. is format)
           -t

Arguments: ...

Return:    ...

